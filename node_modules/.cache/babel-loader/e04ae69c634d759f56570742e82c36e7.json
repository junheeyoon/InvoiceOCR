{"ast":null,"code":"var _jsxFileName = \"D:\\\\WorkSpace\\\\workspace_RPA\\\\invoice\\\\src\\\\InvoiceProcess.js\";\nimport React, { Component } from 'react';\nimport BoardItem from './BoardItem';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InvoiceProcess extends Component {\n  constructor(props) {\n    super(props);\n\n    this.callGetListData = e => {\n      const getDate = window.document.getElementById(\"getDate\").value;\n      fetch(\"http://\" + this.state.IP + \"/RPA/AirWayBill/getDatabase\", {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          methodName: 'getListData',\n          date: getDate\n        })\n      }).then(res => res.json()).then(json => {\n        this.setState({\n          dataList: JSON.parse(json)\n        });\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n\n    this.callGetOneData = (idParam, imagePath) => {\n      fetch(\"http://\" + this.state.IP + \"/RPA/AirWayBill/getDatabase\", {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          methodName: 'getOneData',\n          id: idParam\n        })\n      }).then(res => res.json()).then(json => {\n        this.setState({\n          dataDetail: JSON.parse(json),\n          id: idParam\n        });\n      }).catch(error => {\n        console.error(error);\n      });\n      this.callGetImage(idParam, imagePath);\n    };\n\n    this.callGetImage = (idParam, imagePath) => {\n      const filePath = this.state.rootDir + imagePath;\n      let formData = new FormData();\n      formData.append('methodName', 'getImage');\n      formData.append('imagePath', imagePath); // formData.append('uploadFile', document.getElementById(\"imagePng\").files[0]);\n\n      fetch(\"http://\" + this.state.IP + \"/RPA/AirWayBill/getOCR\", {\n        method: 'POST',\n        header: {\n          \"Content-Disposition: attachment;filename\": imagePath\n        },\n        body: formData\n      }).then(res => res.blob()).then(blob => {\n        var url = window.URL.createObjectURL(blob);\n        var a = document.createElement('a');\n        a.href = url;\n        a.download = filePath;\n        a.filename = filePath;\n        document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n\n        a.click();\n        a.remove(); //afterwards we remove the element again  \n      }).catch(error => {\n        console.error(error);\n      });\n    };\n\n    this.callOCR = idParam => {\n      if (document.getElementById(\"uploadText\").value == \"\") {\n        alert('uploadText should not be an empty field.');\n        return;\n      }\n\n      let formData = new FormData();\n      formData.append('methodName', 'OCR');\n      formData.append('text', document.getElementById(\"uploadText\").value);\n      formData.append('uploadFile', document.getElementById(\"imagePng\").files[0]);\n      fetch(\"http://\" + this.state.IP + \"/RPA/AirWayBill/getOCR\", {\n        method: 'POST',\n        body: formData\n      }).then(res => res.json()).then(json => {\n        this.setState({\n          id: idParam\n        });\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n\n    this.createTextBox = () => {\n      const valueArray = this.state.dataDetail;\n\n      if (valueArray && valueArray.value && valueArray.value.length > 0) {\n        document.getElementById(\"txtPanel\").innerHTML = \"\";\n        let txt;\n\n        for (const [key, value] of Object.entries(valueArray.value)) {\n          console.log(key, value); // const size = value.edCoordX-value.stCoordX;\n\n          console.log(value.stCoordX); // txt = \"<div style='margin: \" + value.stCoordX + \"px \" +value.stCoordY+\"px'><input type='text' size=\" + value.text.length + \" value='\" + value.text + \"' /><br/></div>\";\n\n          txt = \"<input type='text' size=\" + value.text.length + \" value='\" + value.text + \"' /><br/>\";\n          console.log(txt);\n          document.getElementById(\"txtPanel\").innerHTML += txt;\n        }\n      } else if (document.getElementById(\"txtPanel\")) {\n        document.getElementById(\"txtPanel\").innerHTML = \"\";\n      }\n    };\n\n    this.state = {\n      dataList: [],\n      dataDetail: {},\n      boards: [],\n      selectedBoard: {},\n      imgDir: undefined,\n      id: undefined,\n      IP: '127.0.0.1:8728',\n      rootDir: 'D:\\\\WorkSpace\\\\workspace_react\\\\public\\\\'\n    };\n  }\n\n  render() {\n    this.createTextBox();\n    let dataValue = [];\n    let imgDirectory = \"\";\n\n    if (this.state.dataList.value !== undefined) {\n      dataValue = this.state.dataList.value;\n    }\n\n    if (this.state.imgDir !== undefined) {\n      imgDirectory = this.state.imgDir;\n    }\n\n    const divStyle = {\n      backgroundImage: 'url(' + imgDirectory + ')',\n      backgroundPosition: 'cover',\n      backgroundRepeat: 'noRepeat',\n      backgroundSize: 'cover',\n      width: '850px' // ,height: '1200px'\n      ,\n      height: 'auto'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Upload file : \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"imagePng\",\n        name: \"imagePng\",\n        accept: \"image/png, image/jpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"uploadText\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: this.callOCR,\n        children: \"go OCR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), \"Date : \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"getDate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: this.callGetListData,\n        children: \"go Query\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            align: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              width: \"50\",\n              children: \"id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              width: \"500\",\n              children: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              width: \"500\",\n              children: \"imageDir\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              width: \"100\",\n              children: \"createDay\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              width: \"100\",\n              children: \"createTime\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              width: \"100\",\n              children: \"updateDay\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              width: \"100\",\n              children: \"updateTime\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), dataValue.map(row => /*#__PURE__*/_jsxDEV(BoardItem, {\n            row: row,\n            clickEvent: function (path, idParam) {\n              this.setState({\n                imgDir: path,\n                id: idParam\n              });\n              this.callGetOneData(idParam, path);\n            }.bind(this)\n          }, row.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 34\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        width: \"1600\",\n        height: \"720\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imgDirectory,\n              style: divStyle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"txtPanel\",\n              align: \"left\",\n              style: divStyle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default InvoiceProcess;","map":{"version":3,"sources":["D:/WorkSpace/workspace_RPA/invoice/src/InvoiceProcess.js"],"names":["React","Component","BoardItem","InvoiceProcess","constructor","props","callGetListData","e","getDate","window","document","getElementById","value","fetch","state","IP","method","headers","Accept","body","JSON","stringify","methodName","date","then","res","json","setState","dataList","parse","catch","error","console","callGetOneData","idParam","imagePath","id","dataDetail","callGetImage","filePath","rootDir","formData","FormData","append","header","blob","url","URL","createObjectURL","a","createElement","href","download","filename","appendChild","click","remove","callOCR","alert","files","createTextBox","valueArray","length","innerHTML","txt","key","Object","entries","log","stCoordX","text","boards","selectedBoard","imgDir","undefined","render","dataValue","imgDirectory","divStyle","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","width","height","map","row","path","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,WAAP;;;AAGA,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AACnCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAcnBC,eAdmB,GAcAC,CAAD,IAAO;AACrB,YAAMC,OAAO,GAAGC,MAAM,CAACC,QAAP,CAAgBC,cAAhB,CAA+B,SAA/B,EAA0CC,KAA1D;AACAC,MAAAA,KAAK,CAAC,YAAU,KAAKC,KAAL,CAAWC,EAArB,GAAwB,6BAAzB,EAAwD;AACzDC,QAAAA,MAAM,EAAE,MADiD;AAEzDC,QAAAA,OAAO,EAAE;AACLC,UAAAA,MAAM,EAAE,kBADH;AAEH,0BAAgB;AAFb,SAFgD;AAMzDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,UAAU,EAAE,aADK;AAEfC,UAAAA,IAAI,EAAEf;AAFS,SAAf;AANmD,OAAxD,CAAL,CAWCgB,IAXD,CAWMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAXb,EAYCF,IAZD,CAYME,IAAI,IAAI;AACV,aAAKC,QAAL,CAAc;AACVC,UAAAA,QAAQ,EAACR,IAAI,CAACS,KAAL,CAAWH,IAAX;AADC,SAAd;AAGH,OAhBD,EAiBCI,KAjBD,CAiBQC,KAAD,IAAW;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH,OAnBD;AAoBH,KApCkB;;AAAA,SAqCnBE,cArCmB,GAqCF,CAACC,OAAD,EAAUC,SAAV,KAAwB;AACrCtB,MAAAA,KAAK,CAAC,YAAU,KAAKC,KAAL,CAAWC,EAArB,GAAwB,6BAAzB,EAAwD;AACzDC,QAAAA,MAAM,EAAE,MADiD;AAEzDC,QAAAA,OAAO,EAAE;AACLC,UAAAA,MAAM,EAAE,kBADH;AAEH,0BAAgB;AAFb,SAFgD;AAMzDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,UAAU,EAAE,YADK;AAEfc,UAAAA,EAAE,EAAEF;AAFW,SAAf;AANmD,OAAxD,CAAL,CAWCV,IAXD,CAWMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAXb,EAYCF,IAZD,CAYME,IAAI,IAAI;AACV,aAAKC,QAAL,CAAc;AACVU,UAAAA,UAAU,EAACjB,IAAI,CAACS,KAAL,CAAWH,IAAX,CADD;AAERU,UAAAA,EAAE,EAAEF;AAFI,SAAd;AAIH,OAjBD,EAkBCJ,KAlBD,CAkBQC,KAAD,IAAW;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH,OApBD;AAqBA,WAAKO,YAAL,CAAkBJ,OAAlB,EAA2BC,SAA3B;AACH,KA5DkB;;AAAA,SA6DnBG,YA7DmB,GA6DJ,CAACJ,OAAD,EAAUC,SAAV,KAAwB;AACnC,YAAMI,QAAQ,GAAG,KAAKzB,KAAL,CAAW0B,OAAX,GAAqBL,SAAtC;AACA,UAAIM,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8B,UAA9B;AACAF,MAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6BR,SAA7B,EAJmC,CAKnC;;AAEAtB,MAAAA,KAAK,CAAC,YAAU,KAAKC,KAAL,CAAWC,EAArB,GAAwB,wBAAzB,EAAmD;AACpDC,QAAAA,MAAM,EAAE,MAD4C;AAEpD4B,QAAAA,MAAM,EAAC;AACH,sDAA2CT;AADxC,SAF6C;AAKpDhB,QAAAA,IAAI,EAAEsB;AAL8C,OAAnD,CAAL,CAOCjB,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACoB,IAAJ,EAPb,EAQCrB,IARD,CAQMqB,IAAI,IAAI;AACV,YAAIC,GAAG,GAAGrC,MAAM,CAACsC,GAAP,CAAWC,eAAX,CAA2BH,IAA3B,CAAV;AACA,YAAII,CAAC,GAAGvC,QAAQ,CAACwC,aAAT,CAAuB,GAAvB,CAAR;AACAD,QAAAA,CAAC,CAACE,IAAF,GAASL,GAAT;AACAG,QAAAA,CAAC,CAACG,QAAF,GAAab,QAAb;AACAU,QAAAA,CAAC,CAACI,QAAF,GAAad,QAAb;AACA7B,QAAAA,QAAQ,CAACS,IAAT,CAAcmC,WAAd,CAA0BL,CAA1B,EANU,CAMoB;;AAC9BA,QAAAA,CAAC,CAACM,KAAF;AACAN,QAAAA,CAAC,CAACO,MAAF,GARU,CAQG;AAChB,OAjBD,EAkBC1B,KAlBD,CAkBQC,KAAD,IAAW;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH,OApBD;AAqBH,KAzFkB;;AAAA,SA0FnB0B,OA1FmB,GA0FRvB,OAAD,IAAa;AACnB,UAAKxB,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAtC,IAA+C,EAApD,EAAyD;AACrD8C,QAAAA,KAAK,CAAC,0CAAD,CAAL;AACA;AACH;;AAED,UAAIjB,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8B,KAA9B;AACAF,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBjC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAA9D;AACA6B,MAAAA,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8BjC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCgD,KAApC,CAA0C,CAA1C,CAA9B;AAEA9C,MAAAA,KAAK,CAAC,YAAU,KAAKC,KAAL,CAAWC,EAArB,GAAwB,wBAAzB,EAAmD;AACpDC,QAAAA,MAAM,EAAE,MAD4C;AAEpDG,QAAAA,IAAI,EAAEsB;AAF8C,OAAnD,CAAL,CAICjB,IAJD,CAIMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJb,EAKCF,IALD,CAKME,IAAI,IAAI;AACV,aAAKC,QAAL,CAAc;AACVS,UAAAA,EAAE,EAAEF;AADM,SAAd;AAGH,OATD,EAUCJ,KAVD,CAUQC,KAAD,IAAW;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH,OAZD;AAaH,KAlHkB;;AAAA,SAoHnB6B,aApHmB,GAoHH,MAAK;AACjB,YAAMC,UAAU,GAAG,KAAK/C,KAAL,CAAWuB,UAA9B;;AAEA,UAAIwB,UAAU,IAAIA,UAAU,CAACjD,KAAzB,IAAmCiD,UAAU,CAACjD,KAAX,CAAiBkD,MAAjB,GAA0B,CAAjE,EAAmE;AAC/DpD,QAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCoD,SAApC,GAAgD,EAAhD;AAEA,YAAIC,GAAJ;;AACA,aAAK,MAAM,CAACC,GAAD,EAAMrD,KAAN,CAAX,IAA2BsD,MAAM,CAACC,OAAP,CAAeN,UAAU,CAACjD,KAA1B,CAA3B,EAA6D;AACzDoB,UAAAA,OAAO,CAACoC,GAAR,CAAYH,GAAZ,EAAiBrD,KAAjB,EADyD,CAEzD;;AACAoB,UAAAA,OAAO,CAACoC,GAAR,CAAYxD,KAAK,CAACyD,QAAlB,EAHyD,CAIzD;;AACAL,UAAAA,GAAG,GAAG,6BAA6BpD,KAAK,CAAC0D,IAAN,CAAWR,MAAxC,GAAiD,UAAjD,GAA8DlD,KAAK,CAAC0D,IAApE,GAA2E,WAAjF;AACAtC,UAAAA,OAAO,CAACoC,GAAR,CAAYJ,GAAZ;AACAtD,UAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCoD,SAApC,IAAiDC,GAAjD;AACH;AACJ,OAbD,MAaM,IAAGtD,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAH,EAAuC;AACzCD,QAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCoD,SAApC,GAAgD,EAAhD;AACH;AACJ,KAvIkB;;AAEf,SAAKjD,KAAL,GAAa;AACTc,MAAAA,QAAQ,EAAC,EADA;AAEPS,MAAAA,UAAU,EAAC,EAFJ;AAGPkC,MAAAA,MAAM,EAAC,EAHA;AAIPC,MAAAA,aAAa,EAAC,EAJP;AAKPC,MAAAA,MAAM,EAACC,SALA;AAMPtC,MAAAA,EAAE,EAACsC,SANI;AAOP3D,MAAAA,EAAE,EAAC,gBAPI;AAQPyB,MAAAA,OAAO,EAAG;AARH,KAAb;AAUH;;AA8HDmC,EAAAA,MAAM,GAAG;AACL,SAAKf,aAAL;AACA,QAAIgB,SAAS,GAAG,EAAhB;AACA,QAAIC,YAAY,GAAG,EAAnB;;AACA,QAAI,KAAK/D,KAAL,CAAWc,QAAX,CAAoBhB,KAApB,KAA8B8D,SAAlC,EAA4C;AACxCE,MAAAA,SAAS,GAAG,KAAK9D,KAAL,CAAWc,QAAX,CAAoBhB,KAAhC;AACH;;AACD,QAAI,KAAKE,KAAL,CAAW2D,MAAX,KAAsBC,SAA1B,EAAoC;AAChCG,MAAAA,YAAY,GAAG,KAAK/D,KAAL,CAAW2D,MAA1B;AACH;;AACD,UAAMK,QAAQ,GAAG;AACbC,MAAAA,eAAe,EAAE,SAASF,YAAT,GAAwB,GAD5B;AAEZG,MAAAA,kBAAkB,EAAE,OAFR;AAGZC,MAAAA,gBAAgB,EAAE,UAHN;AAIZC,MAAAA,cAAc,EAAE,OAJJ;AAKZC,MAAAA,KAAK,EAAE,OALK,CAMb;AANa;AAOXC,MAAAA,MAAM,EAAE;AAPG,KAAjB;AASA,wBACI;AAAA,gDACkB;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,UAAtB;AAAiC,QAAA,IAAI,EAAC,UAAtC;AAAiD,QAAA,MAAM,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,cADlB,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAK3B,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA,cAJJ,0BAKW;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cALX,eAMI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKnD,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAO,QAAA,MAAM,EAAC,GAAd;AAAA,+BACI;AAAA,kCACI;AAAI,YAAA,KAAK,EAAC,QAAV;AAAA,oCACI;AAAI,cAAA,KAAK,EAAC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,eAOI;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAWQsE,SAAS,CAACS,GAAV,CAAcC,GAAG,iBACZ,QAAC,SAAD;AAAwB,YAAA,GAAG,EAAEA,GAA7B;AAAkC,YAAA,UAAU,EAAE,UAASC,IAAT,EAAerD,OAAf,EAAuB;AAClE,mBAAKP,QAAL,CAAc;AAAC8C,gBAAAA,MAAM,EAACc,IAAR;AAAcnD,gBAAAA,EAAE,EAACF;AAAjB,eAAd;AACA,mBAAKD,cAAL,CAAoBC,OAApB,EAA6BqD,IAA7B;AACH,aAH8C,CAG7CC,IAH6C,CAGxC,IAHwC;AAA9C,aAAgBF,GAAG,CAAClD,EAApB;AAAA;AAAA;AAAA;AAAA,kBADL,CAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ,eA6BI;AAAO,QAAA,MAAM,EAAC,GAAd;AAAkB,QAAA,KAAK,EAAC,MAAxB;AAA+B,QAAA,MAAM,EAAC,KAAtC;AAAA,+BACI;AAAA,kCACI;AAAI,YAAA,KAAK,EAAC,QAAV;AAAA,mCACI;AAAK,cAAA,GAAG,EAAEyC,YAAV;AAAwB,cAAA,KAAK,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAI,YAAA,KAAK,EAAC,QAAV;AAAA,mCAEI;AAAK,cAAA,EAAE,EAAC,UAAR;AAAmB,cAAA,KAAK,EAAC,MAAzB;AAAgC,cAAA,KAAK,EAAEA;AAAvC;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA2CH;;AAzMkC;;AA4MvC,eAAe3E,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport BoardItem from './BoardItem';\nimport './App.css';\n\n\nclass InvoiceProcess extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataList:[]\n            , dataDetail:{}\n            , boards:[]\n            , selectedBoard:{}\n            , imgDir:undefined\n            , id:undefined\n            , IP:'127.0.0.1:8728'\n            , rootDir : 'D:\\\\WorkSpace\\\\workspace_react\\\\public\\\\'\n        }\n    }\n\n    callGetListData = (e) => {\n        const getDate = window.document.getElementById(\"getDate\").value;\n        fetch(\"http://\"+this.state.IP+\"/RPA/AirWayBill/getDatabase\", {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json'\n                , 'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                methodName: 'getListData'\n                , date: getDate\n            })\n        })\n        .then(res => res.json())\n        .then(json => {\n            this.setState({\n                dataList:JSON.parse(json)\n            })\n        })\n        .catch((error) => {\n            console.error(error);\n        });\n    }\n    callGetOneData = (idParam, imagePath) => {\n        fetch(\"http://\"+this.state.IP+\"/RPA/AirWayBill/getDatabase\", {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json'\n                , 'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                methodName: 'getOneData'\n                , id: idParam\n            })\n        })\n        .then(res => res.json())\n        .then(json => {\n            this.setState({\n                dataDetail:JSON.parse(json)\n                , id: idParam\n            })\n        })\n        .catch((error) => {\n            console.error(error);\n        });\n        this.callGetImage(idParam, imagePath)\n    }\n    callGetImage = (idParam, imagePath) => {\n        const filePath = this.state.rootDir + imagePath;\n        let formData = new FormData();\n        formData.append('methodName', 'getImage');\n        formData.append('imagePath', imagePath);\n        // formData.append('uploadFile', document.getElementById(\"imagePng\").files[0]);\n\n        fetch(\"http://\"+this.state.IP+\"/RPA/AirWayBill/getOCR\", {\n            method: 'POST',\n            header:{\n                \"Content-Disposition: attachment;filename\":imagePath\n            },\n            body: formData\n        })\n        .then(res => res.blob())\n        .then(blob => {\n            var url = window.URL.createObjectURL(blob);\n            var a = document.createElement('a');\n            a.href = url;\n            a.download = filePath;\n            a.filename = filePath;\n            document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n            a.click();    \n            a.remove();  //afterwards we remove the element again  \n        })\n        .catch((error) => {\n            console.error(error);\n        });\n    }\n    callOCR = (idParam) => {\n        if ( document.getElementById(\"uploadText\").value == \"\" ) {\n            alert('uploadText should not be an empty field.');\n            return ;\n        }\n\n        let formData = new FormData();\n        formData.append('methodName', 'OCR');\n        formData.append('text', document.getElementById(\"uploadText\").value);\n        formData.append('uploadFile', document.getElementById(\"imagePng\").files[0]);\n\n        fetch(\"http://\"+this.state.IP+\"/RPA/AirWayBill/getOCR\", {\n            method: 'POST',\n            body: formData\n        })\n        .then(res => res.json())\n        .then(json => {\n            this.setState({\n                id: idParam\n            })\n        })\n        .catch((error) => {\n            console.error(error);\n        });\n    }\n\n    createTextBox = () =>{\n        const valueArray = this.state.dataDetail;\n        \n        if (valueArray && valueArray.value &&  valueArray.value.length > 0){\n            document.getElementById(\"txtPanel\").innerHTML = \"\";\n\n            let txt\n            for (const [key, value] of Object.entries(valueArray.value)) {\n                console.log(key, value);\n                // const size = value.edCoordX-value.stCoordX;\n                console.log(value.stCoordX);\n                // txt = \"<div style='margin: \" + value.stCoordX + \"px \" +value.stCoordY+\"px'><input type='text' size=\" + value.text.length + \" value='\" + value.text + \"' /><br/></div>\";\n                txt = \"<input type='text' size=\" + value.text.length + \" value='\" + value.text + \"' /><br/>\";\n                console.log(txt);\n                document.getElementById(\"txtPanel\").innerHTML += txt;\n            }\n        }else if(document.getElementById(\"txtPanel\")){\n            document.getElementById(\"txtPanel\").innerHTML = \"\";\n        }\n    };\n    \n\n    render() {\n        this.createTextBox();\n        let dataValue = [];\n        let imgDirectory = \"\"\n        if (this.state.dataList.value !== undefined){\n            dataValue = this.state.dataList.value;\n        }\n        if (this.state.imgDir !== undefined){\n            imgDirectory = this.state.imgDir;\n        }\n        const divStyle = { \n            backgroundImage: 'url(' + imgDirectory + ')' \n            ,backgroundPosition: 'cover'\n            ,backgroundRepeat: 'noRepeat'\n            ,backgroundSize: 'cover'\n            ,width: '850px'\n            // ,height: '1200px'\n            , height: 'auto'\n        };\n        return (\n            <div>\n                Upload file : <input type=\"file\" id=\"imagePng\" name=\"imagePng\" accept=\"image/png, image/jpeg\"></input>\n                <input type=\"text\" id=\"uploadText\"></input>\n                <button type=\"button\" onClick={this.callOCR}>go OCR</button>\n                <br></br>\n                Date : <input type=\"text\" id=\"getDate\"></input>\n                <button type=\"button\" onClick={this.callGetListData}>go Query</button>\n                <table border=\"1\">\n                    <tbody>\n                        <tr align=\"center\">\n                            <td width=\"50\">id</td>\n                            <td width=\"500\">text</td>\n                            <td width=\"500\">imageDir</td>\n                            <td width=\"100\">createDay</td>\n                            <td width=\"100\">createTime</td> \n                            <td width=\"100\">updateDay</td>\n                            <td width=\"100\">updateTime</td>\n                        </tr>\n                        {\n                            dataValue.map(row =>\n                                (<BoardItem key={row.id} row={row} clickEvent={function(path, idParam){\n                                    this.setState({imgDir:path, id:idParam});\n                                    this.callGetOneData(idParam, path);\n                                }.bind(this)}\n                                />)\n                            )   \n                        }\n                    </tbody>\n                </table>\n                <table border=\"1\" width=\"1600\" height=\"720\">\n                    <tbody>\n                        <td align=\"center\">\n                            <img src={imgDirectory} style={divStyle} ></img>\n                        </td>\n                        <td align=\"center\">\n                            {/* <img src={imgDirectory} class='imgClass'></img> */}\n                            <div id=\"txtPanel\" align=\"left\" style={divStyle} ></div>\n                        </td> \n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default InvoiceProcess;\n"]},"metadata":{},"sourceType":"module"}