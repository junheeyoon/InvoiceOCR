{"ast":null,"code":"var _jsxFileName = \"D:\\\\WorkSpace\\\\workspace_RPA\\\\invoice\\\\src\\\\Coordinate.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Coordinate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadImage = e => {\n      // document.getElementById(\"uploadFIle\").files\n      // canvas 영역\n      const canvas = document.getElementById(\"canvas\");\n      let context = canvas.getContext(\"2d\");\n      const image = new Image(this.state.canvasHeight, this.state.canvasWidth); // Using optional size for image\n      // image.src= document.getElementById(\"uploadFIle\").files[0].name;\n      // image.src= document.getElementById('uploadFIle').value.replace(/.*(\\/|\\\\)/, '');\n\n      context.drawImage(image, 0, 0, this.state.canvasWidth, this.state.canvasHeight);\n      this.setState({\n        context: context\n      });\n    };\n\n    this.setC = () => {\n      const canvas = document.getElementById(\"canvas\");\n      let context = canvas.getContext(\"2d\");\n      const image = new Image(this.state.canvasHeight, this.state.canvasWidth); // Using optional size for image\n\n      image.src = this.state.imagePreviewUrl;\n      context.src = image.src;\n      context.drawImage(image, 0, 0, this.state.canvasWidth, this.state.canvasHeight);\n      this.setState({\n        context: context\n      });\n    };\n\n    this.getLocation = e => {\n      const coorX = e.view.event.layerX;\n      const coorY = e.view.event.layerY;\n      const x = this.state.x;\n      const y = this.state.y;\n      const context = this.state.context;\n      context.globalAlpha = 0.2;\n\n      if (x == 0 && y == 0) {\n        this.setState({\n          x: coorX,\n          y: coorY\n        });\n        context.beginPath();\n        context.fillStyle = 'blue';\n        context.arc(coorX, coorY, 5, 0, 2 * Math.PI);\n        context.fill();\n        context.closePath();\n      } else {\n        this.setState({\n          x: 0,\n          y: 0\n        });\n        const text = x + \",\" + y + \" / \" + coorX + \",\" + coorY; // context.strokeRect(x,y,coorX-x,coorY-y);\n\n        context.beginPath();\n        context.fillStyle = 'blue';\n        context.arc(coorX, coorY, 5, 0, 2 * Math.PI);\n        context.fill();\n        context.fillStyle = \"red\";\n        context.fillRect(x, y, coorX - x, coorY - y);\n        context.globalAlpha = 1;\n        context.fillStyle = \"black\";\n        context.fillText(text, coorX, coorY);\n        context.closePath(); // DB에 넣을때는 화면과 size가 다르기때문에, 맞춰서 데이터를 준다.\n\n        console.log(x * this.state.canvasMultiple, y * this.state.canvasMultiple, coorX * this.state.canvasMultiple - x * this.state.canvasMultiple, coorY * this.state.canvasMultiple - y * this.state.canvasMultiple); // 아래부터는 DB에 데이터 전송이 필요.\n        // ...\n      }\n    };\n\n    this.state = {\n      dataList: null,\n      IP: '127.0.0.1:8728' // , IP:'10.33.194.28:4406'\n      // , rootDir : '/bigdata/RPA/frontend-reactjs/invoice/build/'\n      ,\n      rootDir: 'D:\\\\WorkSpace\\\\workspace_RPA\\\\invoice\\\\public\\\\',\n      id: '',\n      unit: '',\n      x: 0,\n      y: 0,\n      context: '',\n      canvasWidth: 800,\n      canvasHeight: 1200,\n      canvasMultiple: 5,\n      file: '',\n      imagePreviewUrl: ''\n    };\n  }\n\n  _handleImageChange(e) {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result\n      });\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  render() {\n    let {\n      imagePreviewUrl\n    } = this.state;\n    let $imagePreview = null;\n\n    if (imagePreviewUrl) {\n      $imagePreview = /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imagePreviewUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 28\n      }, this);\n    } else {\n      $imagePreview = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"previewText\",\n        children: \"Please select an Image for Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 28\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Coordinate \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.props.history.goBack();\n        },\n        children: \" back \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        border: \"1\",\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          colspan: \"2\",\n          align: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"previewComponent\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"fileInput\",\n              type: \"file\",\n              accept: \"image/png, image/jpeg\",\n              onChange: e => this._handleImageChange(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.setC,\n              children: \"convert\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"txtLabel\",\n            value: \"awb_coordinate\",\n            size: \"80\",\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"txtLabel\",\n            size: \"80\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"txtValue\",\n            size: \"80\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: this.insertCoordinateData,\n            children: \"Insert Coordinate Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Coordinate;","map":{"version":3,"sources":["D:/WorkSpace/workspace_RPA/invoice/src/Coordinate.js"],"names":["React","Component","Coordinate","constructor","props","loadImage","e","canvas","document","getElementById","context","getContext","image","Image","state","canvasHeight","canvasWidth","drawImage","setState","setC","src","imagePreviewUrl","getLocation","coorX","view","event","layerX","coorY","layerY","x","y","globalAlpha","beginPath","fillStyle","arc","Math","PI","fill","closePath","text","fillRect","fillText","console","log","canvasMultiple","dataList","IP","rootDir","id","unit","file","_handleImageChange","preventDefault","reader","FileReader","target","files","onloadend","result","readAsDataURL","render","$imagePreview","history","goBack","insertCoordinateData"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\r\n\r\nclass Coordinate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataList:null\r\n            , IP:'127.0.0.1:8728'\r\n            // , IP:'10.33.194.28:4406'\r\n            // , rootDir : '/bigdata/RPA/frontend-reactjs/invoice/build/'\r\n            , rootDir : 'D:\\\\WorkSpace\\\\workspace_RPA\\\\invoice\\\\public\\\\'\r\n            , id:''\r\n            , unit:''\r\n            , x : 0\r\n            , y : 0\r\n            , context : ''\r\n\r\n            , canvasWidth : 800\r\n            , canvasHeight : 1200\r\n            , canvasMultiple : 5\r\n\r\n            , file : ''\r\n            , imagePreviewUrl : ''\r\n        }\r\n\r\n    }\r\n\r\n    loadImage= (e) => {\r\n        // document.getElementById(\"uploadFIle\").files\r\n\r\n        // canvas 영역\r\n\t\tconst canvas = document.getElementById(\"canvas\");\r\n        let context = canvas.getContext(\"2d\");\r\n\t\tconst image = new Image(this.state.canvasHeight, this.state.canvasWidth); // Using optional size for image\r\n\t\t// image.src= document.getElementById(\"uploadFIle\").files[0].name;\r\n        // image.src= document.getElementById('uploadFIle').value.replace(/.*(\\/|\\\\)/, '');\r\n\r\n\r\n\r\n        context.drawImage( image , 0, 0,this.state.canvasWidth, this.state.canvasHeight);\r\n        this.setState({context:context})\r\n    };\r\n\r\n\r\n\r\n\r\n    \r\n    _handleImageChange(e) {\r\n        e.preventDefault();\r\n\r\n        let reader = new FileReader();\r\n        let file = e.target.files[0];\r\n\r\n        reader.onloadend = () => {\r\n        this.setState({\r\n            file: file,\r\n            imagePreviewUrl: reader.result\r\n        });\r\n        }\r\n\r\n        reader.readAsDataURL(file)\r\n        \r\n        \r\n    }\r\n    setC = () =>{\r\n        const canvas = document.getElementById(\"canvas\");\r\n        let context = canvas.getContext(\"2d\");\r\n        const image = new Image(this.state.canvasHeight, this.state.canvasWidth); // Using optional size for image\r\n\r\n        image.src = this.state.imagePreviewUrl\r\n        \r\n        context.src = image.src\r\n\r\n        context.drawImage( image , 0, 0,this.state.canvasWidth, this.state.canvasHeight);\r\n        this.setState({context:context})\r\n\r\n    }\r\n\r\n    getLocation = (e) => {\r\n        \r\n        const coorX = e.view.event.layerX\r\n        const coorY = e.view.event.layerY\r\n        const x = this.state.x\r\n        const y = this.state.y\r\n        const context = this.state.context\r\n        context.globalAlpha = 0.2;\r\n        \r\n        if (x == 0 && y == 0) {\r\n            this.setState({x:coorX, y:coorY})\r\n            context.beginPath();\r\n            context.fillStyle = 'blue';\r\n            context.arc(coorX, coorY, 5, 0, 2 * Math.PI);\r\n            context.fill();\r\n            context.closePath();\r\n        }else{\r\n            this.setState({x:0,y:0})\r\n            const text = x+\",\"+y +\" / \" +(coorX)+\",\"+(coorY)\r\n            // context.strokeRect(x,y,coorX-x,coorY-y);\r\n            context.beginPath();\r\n            context.fillStyle = 'blue';\r\n            context.arc(coorX, coorY, 5, 0, 2 * Math.PI);\r\n            context.fill();\r\n            context.fillStyle = \"red\";\r\n            context.fillRect(x,y,coorX-x,coorY-y);\r\n\r\n            context.globalAlpha = 1;\r\n            context.fillStyle = \"black\";\r\n            context.fillText(text, coorX,coorY);\r\n            context.closePath();\r\n\r\n            // DB에 넣을때는 화면과 size가 다르기때문에, 맞춰서 데이터를 준다.\r\n            console.log(x * this.state.canvasMultiple\r\n                , y * this.state.canvasMultiple\r\n                , coorX * this.state.canvasMultiple-x * this.state.canvasMultiple\r\n                , coorY * this.state.canvasMultiple-y * this.state.canvasMultiple);\r\n            // 아래부터는 DB에 데이터 전송이 필요.\r\n            // ...\r\n        }\r\n    };\r\n\r\n    render(){\r\n\r\n        let {imagePreviewUrl} = this.state;\r\n        let $imagePreview = null;\r\n        if (imagePreviewUrl) {\r\n          $imagePreview = (<img src={imagePreviewUrl} />);\r\n        } else {\r\n          $imagePreview = (<div className=\"previewText\">Please select an Image for Preview</div>);\r\n        }\r\n        return (\r\n            <div>\r\n                <h3> Coordinate </h3>\r\n                <button onClick={ () => {this.props.history.goBack()} }> back </button>\r\n                <p/>\r\n                \r\n                \r\n                <tr border=\"1\">\r\n                    <td colspan=\"2\" align=\"center\">\r\n                    <div className=\"previewComponent\">\r\n                        {/* <form onSubmit={(e)=>this._handleSubmit(e)}> */}\r\n                        <input className=\"fileInput\" \r\n                            type=\"file\" \r\n                            accept=\"image/png, image/jpeg\"\r\n                            onChange={(e)=>this._handleImageChange(e)} />\r\n                        {/* <button className=\"submitButton\" \r\n                            type=\"submit\" \r\n                            onClick={(e)=>this._handleSubmit(e)}>Upload Image</button> */}\r\n                        {/* </form> */}\r\n                        {/* <div className=\"imgPreview\">\r\n                            {$imagePreview}\r\n                        </div> */}\r\n\r\n                        <button onClick={this.setC}>convert</button>\r\n                    </div>\r\n                    <p/>\r\n                    </td>\r\n                </tr> \r\n                <tr>\r\n                    <td>\r\n                    {/* <input type=\"file\" id=\"uploadFIle\" name=\"uploadFIle\" accept=\"image/png, image/jpeg\" onChange={this.loadImage}></input> */}\r\n                    <p/>\r\n                    {/* <canvas id=\"canvas\" height=\"1200\" width=\"800\" onClick={this.getLocation}>This browser doesn't support canvas</canvas> */}\r\n                    </td>\r\n\r\n                    <td>\r\n                    <input type='text' id='txtLabel' value ='awb_coordinate' size='80' disabled/>\r\n                    <input type='text' id='txtLabel' size='80' />\r\n                    <input type='text' id='txtValue' size='80' />\r\n                    <p/>\r\n                    <button type='button' onClick={this.insertCoordinateData}>Insert Coordinate Data</button>\r\n                    </td>\r\n                </tr>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Coordinate;"]},"metadata":{},"sourceType":"module"}