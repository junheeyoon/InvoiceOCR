{"ast":null,"code":"var _jsxFileName = \"D:\\\\WorkSpace\\\\workspace_RPA\\\\invoice\\\\src\\\\InvoiceProcess.js\";\nimport React, { Component } from 'react';\nimport BoardItem from './BoardItem';\nimport Coordinate from './Coordinate';\nimport './App.css';\nimport { BrowserRouter as Button, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InvoiceProcess extends Component {\n  constructor(props) {\n    super(props);\n\n    this.callGetListData = e => {\n      const getDate = window.document.getElementById(\"getDate\").value;\n      fetch(\"http://\" + this.state.IP + \"/RPA/Invoice/getOCR\", {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          methodName: 'ListData',\n          date: getDate\n        })\n      }).then(res => res.json()).then(json => {\n        this.setState({\n          dataList: JSON.parse(json)\n        });\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n\n    this.fileUpload = idParam => {\n      let formData = new FormData();\n      formData.append('methodName', 'FileUpload');\n\n      for (const file of document.getElementById(\"uploadFIle\").files) {\n        formData.append('uploadFile', file, file.name);\n      }\n\n      fetch(\"http://\" + this.state.IP + \"/RPA/Invoice/getOCR\", {\n        method: 'POST',\n        body: formData\n      }).then(res => res.json()).then(json => {\n        this.setState({\n          id: idParam\n        });\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n\n    this.callUpdateData = e => {\n      if (document.getElementById(\"dataText\") == null) return;\n      const dataText = document.getElementById(\"dataText\").value;\n\n      if (dataText == \"\") {\n        alert('uploadText should not be an empty field.');\n        return;\n      }\n\n      let formData = new FormData();\n      formData.append('methodName', 'UpdateData');\n      formData.append('id', this.state.id);\n      formData.append('unit', this.state.unit);\n      formData.append('text', dataText);\n      fetch(\"http://\" + this.state.IP + \"/RPA/Invoice/getOCR\", {\n        method: 'POST',\n        body: formData\n      }).then(res => res.json()).then(this.callGetListData).catch(error => {\n        console.error(error);\n      });\n      document.getElementById(\"imageFile\").src = \"\";\n      document.getElementById(\"txtPanel\").innerHTML = \"\";\n    };\n\n    this.showImage = (id, path, unit, text) => {\n      // document.getElementById(\"imageFile\").src = \"/invoice\" + path;\n      document.getElementById(\"imageFile\").src = path;\n      document.getElementById(\"txtPanel\").innerHTML = \"\";\n      let txt = \"<div style='position:float'>\" + unit + \" : <input type='text' id='dataText' value='\" + text + \"' size='80' />\";\n      document.getElementById(\"txtPanel\").innerHTML += txt; // canvas 영역\n\n      const canvas = document.getElementById(\"canvas\");\n      let context = canvas.getContext(\"2d\");\n      const image = new Image(this.state.canvasHeight, this.state.canvasWidth); // Using optional size for image\n\n      image.src = path;\n      context.drawImage(image, 0, 0, this.state.canvasWidth, this.state.canvasHeight);\n      this.setState({\n        context: context\n      });\n    };\n\n    this.getLocation = e => {\n      const coorX = e.view.event.layerX;\n      const coorY = e.view.event.layerY;\n      const x = this.state.x;\n      const y = this.state.y;\n      const context = this.state.context;\n      context.globalAlpha = 0.2;\n\n      if (x == 0 && y == 0) {\n        this.setState({\n          x: coorX,\n          y: coorY\n        });\n        context.beginPath();\n        context.fillStyle = 'blue';\n        context.arc(coorX, coorY, 5, 0, 2 * Math.PI);\n        context.fill();\n        context.closePath();\n      } else {\n        this.setState({\n          x: 0,\n          y: 0\n        });\n        const text = x + \",\" + y + \" / \" + coorX + \",\" + coorY; // context.strokeRect(x,y,coorX-x,coorY-y);\n\n        context.beginPath();\n        context.fillStyle = 'blue';\n        context.arc(coorX, coorY, 5, 0, 2 * Math.PI);\n        context.fill();\n        context.fillStyle = \"red\";\n        context.fillRect(x, y, coorX - x, coorY - y);\n        context.globalAlpha = 1;\n        context.fillStyle = \"black\";\n        context.fillText(text, coorX, coorY);\n        context.closePath(); // DB에 넣을때는 화면과 size가 다르기때문에, 맞춰서 데이터를 준다.\n\n        console.log(x * this.state.canvasMultiple, y * this.state.canvasMultiple, coorX * this.state.canvasMultiple - x * this.state.canvasMultiple, coorY * this.state.canvasMultiple - y * this.state.canvasMultiple); // 아래부터는 DB에 데이터 전송이 필요.\n        // ...\n      }\n    };\n\n    this.state = {\n      dataList: null,\n      IP: '127.0.0.1:8728' // , IP:'10.33.194.28:4406'\n      // , rootDir : '/bigdata/RPA/frontend-reactjs/invoice/build/'\n      ,\n      rootDir: 'D:\\\\WorkSpace\\\\workspace_RPA\\\\invoice\\\\public\\\\',\n      id: '',\n      unit: '',\n      x: 0,\n      y: 0,\n      context: '',\n      canvasWidth: 800,\n      canvasHeight: 1200,\n      canvasMultiple: 5\n    };\n  }\n\n  render() {\n    let dataValue = [];\n    let imgDirectory = \"\";\n\n    if (this.state.dataList) {\n      dataValue = this.state.dataList.value;\n    }\n\n    const divStyle = {\n      backgroundImage: 'url(' + imgDirectory + ')',\n      backgroundPosition: 'cover',\n      backgroundRepeat: 'noRepeat',\n      backgroundSize: 'cover',\n      width: '850px' // ,height: '1200px'\n      ,\n      height: 'auto'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Invoice Data Process\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 46\n      }, this), \"Upload file(zip, pdf, png) : \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"uploadFIle\",\n        name: \"uploadFIle[]\",\n        accept: \"image/png, image/jpeg, .zip, .pdf\",\n        multiple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 46\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: this.fileUpload,\n        children: \"File Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"./Coordinate\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Coordinate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), \"Date : \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"getDate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: this.callGetListData,\n        children: \"go Query\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            align: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              width: \"50\",\n              children: \"id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              width: \"100\",\n              children: \"invoiceName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              width: \"100\",\n              children: \"unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              width: \"1000\",\n              children: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              width: \"100\",\n              children: \"filePath\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              width: \"100\",\n              children: \"updateDate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              width: \"100\",\n              children: \"updateTime\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this), dataValue.map(row => /*#__PURE__*/_jsxDEV(BoardItem, {\n            row: row,\n            clickEvent: function (id, path, unit, text) {\n              this.setState({\n                id: id,\n                imgDir: path,\n                unit: unit\n              });\n              this.showImage(id, path, unit, text);\n            }.bind(this)\n          }, row.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 34\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        width: \"1600\",\n        height: \"720\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: imgDirectory,\n                style: divStyle,\n                id: \"imageFile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"txtPanel\",\n                align: \"left\",\n                style: divStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: this.callUpdateData,\n              children: \"Update Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"canvas\",\n        height: \"1200\",\n        width: \"800\",\n        onClick: this.getLocation,\n        children: \"This browser doesn't support canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default InvoiceProcess;","map":{"version":3,"sources":["D:/WorkSpace/workspace_RPA/invoice/src/InvoiceProcess.js"],"names":["React","Component","BoardItem","Coordinate","BrowserRouter","Button","Link","InvoiceProcess","constructor","props","callGetListData","e","getDate","window","document","getElementById","value","fetch","state","IP","method","headers","Accept","body","JSON","stringify","methodName","date","then","res","json","setState","dataList","parse","catch","error","console","fileUpload","idParam","formData","FormData","append","file","files","name","id","callUpdateData","dataText","alert","unit","src","innerHTML","showImage","path","text","txt","canvas","context","getContext","image","Image","canvasHeight","canvasWidth","drawImage","getLocation","coorX","view","event","layerX","coorY","layerY","x","y","globalAlpha","beginPath","fillStyle","arc","Math","PI","fill","closePath","fillRect","fillText","log","canvasMultiple","rootDir","render","dataValue","imgDirectory","divStyle","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","width","height","map","row","imgDir","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport BoardItem from './BoardItem';\nimport Coordinate from './Coordinate';\n\nimport './App.css';\nimport { BrowserRouter as Button, Link} from 'react-router-dom';\n\n\nclass InvoiceProcess extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataList:null\n            , IP:'127.0.0.1:8728'\n            // , IP:'10.33.194.28:4406'\n            // , rootDir : '/bigdata/RPA/frontend-reactjs/invoice/build/'\n            , rootDir : 'D:\\\\WorkSpace\\\\workspace_RPA\\\\invoice\\\\public\\\\'\n            , id:''\n            , unit:''\n            , x : 0\n            , y : 0\n            , context : ''\n\n            , canvasWidth : 800\n            , canvasHeight : 1200\n            , canvasMultiple : 5\n        }\n\n    }\n\n    callGetListData = (e) => {\n        const getDate = window.document.getElementById(\"getDate\").value;\n        fetch(\"http://\"+this.state.IP+\"/RPA/Invoice/getOCR\", {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json'\n                , 'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                methodName: 'ListData'\n                , date: getDate\n            })\n        })\n        .then(res => res.json())\n        .then(json => {\n            this.setState({\n                dataList:JSON.parse(json)\n            })\n        })\n        .catch((error) => {\n            console.error(error);\n        });\n    }\n    \n   \n    fileUpload = (idParam) => {\n        let formData = new FormData();\n        formData.append('methodName', 'FileUpload');\n\n        for (const file of document.getElementById(\"uploadFIle\").files) {\n            formData.append('uploadFile',file,file.name)\n        }\n\n        fetch(\"http://\"+this.state.IP+\"/RPA/Invoice/getOCR\", {\n            method: 'POST',\n            body: formData\n        })\n        .then(res => res.json())\n        .then(json => {\n            this.setState({\n                id: idParam\n            })\n        })\n        .catch((error) => {\n            console.error(error);\n        });\n    }\n\n    callUpdateData = (e) => {\n        if (document.getElementById(\"dataText\") == null) return;\n        const dataText = document.getElementById(\"dataText\").value\n        if ( dataText == \"\" ) {\n            alert('uploadText should not be an empty field.');\n            return ;\n        }\n        let formData = new FormData();\n        formData.append('methodName', 'UpdateData');\n        formData.append('id', this.state.id);\n        formData.append('unit', this.state.unit);\n        formData.append('text', dataText);\n\n        fetch(\"http://\"+this.state.IP+\"/RPA/Invoice/getOCR\", {\n            method: 'POST',\n            body: formData\n        })\n        .then(res => res.json())\n        .then(\n            this.callGetListData\n            \n        )\n        .catch((error) => {\n            console.error(error);\n        });\n        document.getElementById(\"imageFile\").src= \"\";\n        document.getElementById(\"txtPanel\").innerHTML = \"\";\n\n    }\n    \n    showImage = (id, path, unit,text) =>{\n        // document.getElementById(\"imageFile\").src = \"/invoice\" + path;\n        document.getElementById(\"imageFile\").src = path;\n        document.getElementById(\"txtPanel\").innerHTML = \"\";\n        let txt = \"<div style='position:float'>\"+unit+\" : <input type='text' id='dataText' value='\" + text + \"' size='80' />\"\n        document.getElementById(\"txtPanel\").innerHTML += txt;\n\n        // canvas 영역\n\t\tconst canvas = document.getElementById(\"canvas\");\n        let context = canvas.getContext(\"2d\");\n\t\tconst image = new Image(this.state.canvasHeight, this.state.canvasWidth); // Using optional size for image\n\t\timage.src= path;\n\t\tcontext.drawImage( image , 0, 0,this.state.canvasWidth, this.state.canvasHeight);\n        this.setState({context:context})\n    };\n\n\tgetLocation = (e) => {\n\t\tconst coorX = e.view.event.layerX\n\t\tconst coorY = e.view.event.layerY\n        const x = this.state.x\n        const y = this.state.y\n        const context = this.state.context\n        context.globalAlpha = 0.2;\n        \n\t\tif (x == 0 && y == 0) {\n\t\t\tthis.setState({x:coorX, y:coorY})\n            context.beginPath();\n            context.fillStyle = 'blue';\n            context.arc(coorX, coorY, 5, 0, 2 * Math.PI);\n            context.fill();\n            context.closePath();\n        }else{\n            this.setState({x:0,y:0})\n            const text = x+\",\"+y +\" / \" +(coorX)+\",\"+(coorY)\n            // context.strokeRect(x,y,coorX-x,coorY-y);\n            context.beginPath();\n            context.fillStyle = 'blue';\n            context.arc(coorX, coorY, 5, 0, 2 * Math.PI);\n            context.fill();\n            context.fillStyle = \"red\";\n            context.fillRect(x,y,coorX-x,coorY-y);\n\n            context.globalAlpha = 1;\n            context.fillStyle = \"black\";\n            context.fillText(text, coorX,coorY);\n            context.closePath();\n\n            // DB에 넣을때는 화면과 size가 다르기때문에, 맞춰서 데이터를 준다.\n            console.log(x * this.state.canvasMultiple\n                , y * this.state.canvasMultiple\n                , coorX * this.state.canvasMultiple-x * this.state.canvasMultiple\n                , coorY * this.state.canvasMultiple-y * this.state.canvasMultiple);\n            // 아래부터는 DB에 데이터 전송이 필요.\n            // ...\n        }\n    };\n    render() {\n        let dataValue = [];\n        let imgDirectory = \"\"\n        if (this.state.dataList){\n            dataValue = this.state.dataList.value;\n        }\n        const divStyle = { \n            backgroundImage: 'url(' + imgDirectory + ')' \n            ,backgroundPosition: 'cover'\n            ,backgroundRepeat: 'noRepeat'\n            ,backgroundSize: 'cover'\n            ,width: '850px'\n            // ,height: '1200px'\n            , height: 'auto'\n        };\n            \n        return (\n                            \n            \n            <div>\n                <h1>Invoice Data Process</h1><p/>\n                Upload file(zip, pdf, png) : <input type=\"file\" id=\"uploadFIle\" name=\"uploadFIle[]\" accept=\"image/png, image/jpeg, .zip, .pdf\"  multiple></input>\n                {/* <input type=\"text\" id=\"uploadText\"></input> */}\n                <button type=\"button\" onClick={this.fileUpload}>File Upload</button>\n                <Router>\n                    <Link to=\"./Coordinate\"> \n                        <Button>Coordinate</Button>\n                    </Link>\n                </Router>\n                <p/>\n                Date : <input type=\"text\" id=\"getDate\"></input>\n                <button type=\"button\" onClick={this.callGetListData}>go Query</button>\n                <p/>\n                <table border=\"1\">\n                    <tbody>\n                        <tr align=\"center\">\n                            <td width=\"50\">id</td>\n                            <td width=\"100\">invoiceName</td>\n                            <td width=\"100\">unit</td>\n                            <td width=\"1000\">text</td>\n                            <td width=\"100\">filePath</td> \n                            <td width=\"100\">updateDate</td>\n                            <td width=\"100\">updateTime</td>\n                        </tr>\n                        {\n                            dataValue.map(row =>\n                                (<BoardItem key={row.id} row={row} clickEvent={function(id, path, unit, text){\n                                    this.setState({id:id, imgDir:path, unit:unit});\n                                    this.showImage(id, path, unit, text);\n                                }.bind(this)}\n                                />)\n                            )   \n                        }\n                    </tbody>\n                </table>\n                <table border=\"1\" width=\"1600\" height=\"720\">\n                    <tbody>\n                        <tr>\n                            <td align=\"center\">\n                                <img src={imgDirectory} style={divStyle} id=\"imageFile\"></img>\n                            </td>\n                            <td align=\"center\">\n                                {/* <img src={imgDirectory} class='imgClass'></img> */}\n                                <div id=\"txtPanel\" align=\"left\" style={divStyle} ></div>\n                            </td> \n                        </tr>\n                        <tr>\n                            <button type='button' onClick={this.callUpdateData}>Update Data</button>\n                        </tr>\n                    </tbody>\n                </table>\n                \n                <canvas id=\"canvas\" height=\"1200\" width=\"800\" onClick={this.getLocation}>This browser doesn't support canvas</canvas>\n\n            </div>\n        );\n    }\n}\n\nexport default InvoiceProcess;\n"]},"metadata":{},"sourceType":"module"}