{"ast":null,"code":"var _jsxFileName = \"D:\\\\WorkSpace\\\\workspace_RPA\\\\invoice\\\\src\\\\Coordinate.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Coordinate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getLocation = e => {\n      const coorX = e.view.event.layerX;\n      const coorY = e.view.event.layerY;\n      const x = this.state.x;\n      const y = this.state.y;\n      const context = this.state.context;\n      context.globalAlpha = 0.2;\n\n      if (x == 0 && y == 0) {\n        this.setState({\n          x: coorX,\n          y: coorY\n        });\n        context.beginPath();\n        context.fillStyle = 'blue';\n        context.arc(coorX, coorY, 5, 0, 2 * Math.PI);\n        context.fill();\n        context.closePath();\n      } else {\n        this.setState({\n          x: 0,\n          y: 0\n        });\n        const text = x + \",\" + y + \" / \" + coorX + \",\" + coorY; // context.strokeRect(x,y,coorX-x,coorY-y);\n\n        context.beginPath();\n        context.fillStyle = 'blue';\n        context.arc(coorX, coorY, 5, 0, 2 * Math.PI);\n        context.fill();\n        context.fillStyle = \"red\";\n        context.fillRect(x, y, coorX - x, coorY - y);\n        context.globalAlpha = 1;\n        context.fillStyle = \"black\";\n        context.fillText(text, coorX, coorY);\n        context.closePath(); // DB에 넣을때는 화면과 size가 다르기때문에, 맞춰서 데이터를 준다.\n\n        console.log(x * this.state.canvasMultiple, y * this.state.canvasMultiple, coorX * this.state.canvasMultiple - x * this.state.canvasMultiple, coorY * this.state.canvasMultiple - y * this.state.canvasMultiple); // 아래부터는 DB에 데이터 전송이 필요.\n        // ...\n      }\n    };\n\n    this.state = {\n      dataList: null,\n      IP: '127.0.0.1:8728' // , IP:'10.33.194.28:4406'\n      // , rootDir : '/bigdata/RPA/frontend-reactjs/invoice/build/'\n      ,\n      rootDir: 'D:\\\\WorkSpace\\\\workspace_RPA\\\\invoice\\\\public\\\\',\n      id: '',\n      unit: '',\n      x: 0,\n      y: 0,\n      context: '',\n      canvasWidth: 800,\n      canvasHeight: 1200,\n      canvasMultiple: 5\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Coordinate \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.props.history.goBack();\n        },\n        children: \" back \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"canvas\",\n        height: \"1200\",\n        width: \"800\",\n        onClick: this.getLocation,\n        children: \"This browser doesn't support canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Coordinate;","map":{"version":3,"sources":["D:/WorkSpace/workspace_RPA/invoice/src/Coordinate.js"],"names":["React","Component","Coordinate","constructor","props","getLocation","e","coorX","view","event","layerX","coorY","layerY","x","state","y","context","globalAlpha","setState","beginPath","fillStyle","arc","Math","PI","fill","closePath","text","fillRect","fillText","console","log","canvasMultiple","dataList","IP","rootDir","id","unit","canvasWidth","canvasHeight","render","history","goBack"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAC/BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAoBnBC,WApBmB,GAoBJC,CAAD,IAAO;AACjB,YAAMC,KAAK,GAAGD,CAAC,CAACE,IAAF,CAAOC,KAAP,CAAaC,MAA3B;AACA,YAAMC,KAAK,GAAGL,CAAC,CAACE,IAAF,CAAOC,KAAP,CAAaG,MAA3B;AACA,YAAMC,CAAC,GAAG,KAAKC,KAAL,CAAWD,CAArB;AACA,YAAME,CAAC,GAAG,KAAKD,KAAL,CAAWC,CAArB;AACA,YAAMC,OAAO,GAAG,KAAKF,KAAL,CAAWE,OAA3B;AACAA,MAAAA,OAAO,CAACC,WAAR,GAAsB,GAAtB;;AAEA,UAAIJ,CAAC,IAAI,CAAL,IAAUE,CAAC,IAAI,CAAnB,EAAsB;AAClB,aAAKG,QAAL,CAAc;AAACL,UAAAA,CAAC,EAACN,KAAH;AAAUQ,UAAAA,CAAC,EAACJ;AAAZ,SAAd;AACAK,QAAAA,OAAO,CAACG,SAAR;AACAH,QAAAA,OAAO,CAACI,SAAR,GAAoB,MAApB;AACAJ,QAAAA,OAAO,CAACK,GAAR,CAAYd,KAAZ,EAAmBI,KAAnB,EAA0B,CAA1B,EAA6B,CAA7B,EAAgC,IAAIW,IAAI,CAACC,EAAzC;AACAP,QAAAA,OAAO,CAACQ,IAAR;AACAR,QAAAA,OAAO,CAACS,SAAR;AACH,OAPD,MAOK;AACD,aAAKP,QAAL,CAAc;AAACL,UAAAA,CAAC,EAAC,CAAH;AAAKE,UAAAA,CAAC,EAAC;AAAP,SAAd;AACA,cAAMW,IAAI,GAAGb,CAAC,GAAC,GAAF,GAAME,CAAN,GAAS,KAAT,GAAiBR,KAAjB,GAAwB,GAAxB,GAA6BI,KAA1C,CAFC,CAGD;;AACAK,QAAAA,OAAO,CAACG,SAAR;AACAH,QAAAA,OAAO,CAACI,SAAR,GAAoB,MAApB;AACAJ,QAAAA,OAAO,CAACK,GAAR,CAAYd,KAAZ,EAAmBI,KAAnB,EAA0B,CAA1B,EAA6B,CAA7B,EAAgC,IAAIW,IAAI,CAACC,EAAzC;AACAP,QAAAA,OAAO,CAACQ,IAAR;AACAR,QAAAA,OAAO,CAACI,SAAR,GAAoB,KAApB;AACAJ,QAAAA,OAAO,CAACW,QAAR,CAAiBd,CAAjB,EAAmBE,CAAnB,EAAqBR,KAAK,GAACM,CAA3B,EAA6BF,KAAK,GAACI,CAAnC;AAEAC,QAAAA,OAAO,CAACC,WAAR,GAAsB,CAAtB;AACAD,QAAAA,OAAO,CAACI,SAAR,GAAoB,OAApB;AACAJ,QAAAA,OAAO,CAACY,QAAR,CAAiBF,IAAjB,EAAuBnB,KAAvB,EAA6BI,KAA7B;AACAK,QAAAA,OAAO,CAACS,SAAR,GAdC,CAgBD;;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYjB,CAAC,GAAG,KAAKC,KAAL,CAAWiB,cAA3B,EACMhB,CAAC,GAAG,KAAKD,KAAL,CAAWiB,cADrB,EAEMxB,KAAK,GAAG,KAAKO,KAAL,CAAWiB,cAAnB,GAAkClB,CAAC,GAAG,KAAKC,KAAL,CAAWiB,cAFvD,EAGMpB,KAAK,GAAG,KAAKG,KAAL,CAAWiB,cAAnB,GAAkChB,CAAC,GAAG,KAAKD,KAAL,CAAWiB,cAHvD,EAjBC,CAqBD;AACA;AACH;AACJ,KA3DkB;;AAEf,SAAKjB,KAAL,GAAa;AACTkB,MAAAA,QAAQ,EAAC,IADA;AAEPC,MAAAA,EAAE,EAAC,gBAFI,CAGT;AACA;AAJS;AAKPC,MAAAA,OAAO,EAAG,iDALH;AAMPC,MAAAA,EAAE,EAAC,EANI;AAOPC,MAAAA,IAAI,EAAC,EAPE;AAQPvB,MAAAA,CAAC,EAAG,CARG;AASPE,MAAAA,CAAC,EAAG,CATG;AAUPC,MAAAA,OAAO,EAAG,EAVH;AAYPqB,MAAAA,WAAW,EAAG,GAZP;AAaPC,MAAAA,YAAY,EAAG,IAbR;AAcPP,MAAAA,cAAc,EAAG;AAdV,KAAb;AAiBH;;AA0CDQ,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAG,MAAM;AAAC,eAAKnC,KAAL,CAAWoC,OAAX,CAAmBC,MAAnB;AAA4B,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,QAAA,EAAE,EAAC,QAAX;AAAoB,QAAA,MAAM,EAAC,MAA3B;AAAkC,QAAA,KAAK,EAAC,KAAxC;AAA8C,QAAA,OAAO,EAAE,KAAKpC,WAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAxE8B;;AA0EnC,eAAeH,UAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Coordinate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataList:null\r\n            , IP:'127.0.0.1:8728'\r\n            // , IP:'10.33.194.28:4406'\r\n            // , rootDir : '/bigdata/RPA/frontend-reactjs/invoice/build/'\r\n            , rootDir : 'D:\\\\WorkSpace\\\\workspace_RPA\\\\invoice\\\\public\\\\'\r\n            , id:''\r\n            , unit:''\r\n            , x : 0\r\n            , y : 0\r\n            , context : ''\r\n\r\n            , canvasWidth : 800\r\n            , canvasHeight : 1200\r\n            , canvasMultiple : 5\r\n        }\r\n\r\n    }\r\n    getLocation = (e) => {\r\n        const coorX = e.view.event.layerX\r\n        const coorY = e.view.event.layerY\r\n        const x = this.state.x\r\n        const y = this.state.y\r\n        const context = this.state.context\r\n        context.globalAlpha = 0.2;\r\n        \r\n        if (x == 0 && y == 0) {\r\n            this.setState({x:coorX, y:coorY})\r\n            context.beginPath();\r\n            context.fillStyle = 'blue';\r\n            context.arc(coorX, coorY, 5, 0, 2 * Math.PI);\r\n            context.fill();\r\n            context.closePath();\r\n        }else{\r\n            this.setState({x:0,y:0})\r\n            const text = x+\",\"+y +\" / \" +(coorX)+\",\"+(coorY)\r\n            // context.strokeRect(x,y,coorX-x,coorY-y);\r\n            context.beginPath();\r\n            context.fillStyle = 'blue';\r\n            context.arc(coorX, coorY, 5, 0, 2 * Math.PI);\r\n            context.fill();\r\n            context.fillStyle = \"red\";\r\n            context.fillRect(x,y,coorX-x,coorY-y);\r\n\r\n            context.globalAlpha = 1;\r\n            context.fillStyle = \"black\";\r\n            context.fillText(text, coorX,coorY);\r\n            context.closePath();\r\n\r\n            // DB에 넣을때는 화면과 size가 다르기때문에, 맞춰서 데이터를 준다.\r\n            console.log(x * this.state.canvasMultiple\r\n                , y * this.state.canvasMultiple\r\n                , coorX * this.state.canvasMultiple-x * this.state.canvasMultiple\r\n                , coorY * this.state.canvasMultiple-y * this.state.canvasMultiple);\r\n            // 아래부터는 DB에 데이터 전송이 필요.\r\n            // ...\r\n        }\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h3> Coordinate </h3>\r\n                <button onClick={ () => {this.props.history.goBack()} }> back </button>\r\n                <p/>\r\n                <canvas id=\"canvas\" height=\"1200\" width=\"800\" onClick={this.getLocation}>This browser doesn't support canvas</canvas>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Coordinate;"]},"metadata":{},"sourceType":"module"}