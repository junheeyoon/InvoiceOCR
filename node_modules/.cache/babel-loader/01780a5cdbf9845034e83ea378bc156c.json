{"ast":null,"code":"var _jsxFileName = \"D:\\\\WorkSpace\\\\workspace_RPA\\\\invoice\\\\src\\\\Coordinate.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Coordinate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadImage = e => {\n      // document.getElementById(\"uploadFIle\").files\n      // canvas 영역\n      const canvas = document.getElementById(\"canvas\");\n      let context = canvas.getContext(\"2d\");\n      const image = new Image(this.state.canvasHeight, this.state.canvasWidth); // Using optional size for image\n      // image.src= document.getElementById(\"uploadFIle\").files[0].name;\n      // image.src= document.getElementById('uploadFIle').value.replace(/.*(\\/|\\\\)/, '');\n      // var file = document.getElementById(\"uploadFIle\").files[0];\n\n      e.preventDefault();\n      let reader = new FileReader();\n      let file = e.target.files[0];\n\n      reader.onloadend = () => {\n        this.setState({\n          file: file,\n          previewURL: reader.result\n        });\n        console.log(reader.result);\n      };\n\n      reader.readAsDataURL(file);\n      context.drawImage(image, 0, 0, this.state.canvasWidth, this.state.canvasHeight);\n      this.setState({\n        context: context\n      });\n    };\n\n    this.getLocation = e => {\n      const coorX = e.view.event.layerX;\n      const coorY = e.view.event.layerY;\n      const x = this.state.x;\n      const y = this.state.y;\n      const context = this.state.context;\n      context.globalAlpha = 0.2;\n\n      if (x == 0 && y == 0) {\n        this.setState({\n          x: coorX,\n          y: coorY\n        });\n        context.beginPath();\n        context.fillStyle = 'blue';\n        context.arc(coorX, coorY, 5, 0, 2 * Math.PI);\n        context.fill();\n        context.closePath();\n      } else {\n        this.setState({\n          x: 0,\n          y: 0\n        });\n        const text = x + \",\" + y + \" / \" + coorX + \",\" + coorY; // context.strokeRect(x,y,coorX-x,coorY-y);\n\n        context.beginPath();\n        context.fillStyle = 'blue';\n        context.arc(coorX, coorY, 5, 0, 2 * Math.PI);\n        context.fill();\n        context.fillStyle = \"red\";\n        context.fillRect(x, y, coorX - x, coorY - y);\n        context.globalAlpha = 1;\n        context.fillStyle = \"black\";\n        context.fillText(text, coorX, coorY);\n        context.closePath(); // DB에 넣을때는 화면과 size가 다르기때문에, 맞춰서 데이터를 준다.\n\n        console.log(x * this.state.canvasMultiple, y * this.state.canvasMultiple, coorX * this.state.canvasMultiple - x * this.state.canvasMultiple, coorY * this.state.canvasMultiple - y * this.state.canvasMultiple); // 아래부터는 DB에 데이터 전송이 필요.\n        // ...\n      }\n    };\n\n    this.state = {\n      dataList: null,\n      IP: '127.0.0.1:8728' // , IP:'10.33.194.28:4406'\n      // , rootDir : '/bigdata/RPA/frontend-reactjs/invoice/build/'\n      ,\n      rootDir: 'D:\\\\WorkSpace\\\\workspace_RPA\\\\invoice\\\\public\\\\',\n      id: '',\n      unit: '',\n      x: 0,\n      y: 0,\n      context: '',\n      canvasWidth: 800,\n      canvasHeight: 1200,\n      canvasMultiple: 5,\n      file: '',\n      previewURL: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Coordinate \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.props.history.goBack();\n        },\n        children: \" back \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"uploadFIle\",\n        name: \"uploadFIle\",\n        accept: \"image/png, image/jpeg\",\n        onChange: this.loadImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"canvas\",\n        height: \"1200\",\n        width: \"800\",\n        onClick: this.getLocation,\n        children: \"This browser doesn't support canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Coordinate;","map":{"version":3,"sources":["D:/WorkSpace/workspace_RPA/invoice/src/Coordinate.js"],"names":["React","Component","Coordinate","constructor","props","loadImage","e","canvas","document","getElementById","context","getContext","image","Image","state","canvasHeight","canvasWidth","preventDefault","reader","FileReader","file","target","files","onloadend","setState","previewURL","result","console","log","readAsDataURL","drawImage","getLocation","coorX","view","event","layerX","coorY","layerY","x","y","globalAlpha","beginPath","fillStyle","arc","Math","PI","fill","closePath","text","fillRect","fillText","canvasMultiple","dataList","IP","rootDir","id","unit","render","history","goBack"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\r\n\r\nclass Coordinate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataList:null\r\n            , IP:'127.0.0.1:8728'\r\n            // , IP:'10.33.194.28:4406'\r\n            // , rootDir : '/bigdata/RPA/frontend-reactjs/invoice/build/'\r\n            , rootDir : 'D:\\\\WorkSpace\\\\workspace_RPA\\\\invoice\\\\public\\\\'\r\n            , id:''\r\n            , unit:''\r\n            , x : 0\r\n            , y : 0\r\n            , context : ''\r\n\r\n            , canvasWidth : 800\r\n            , canvasHeight : 1200\r\n            , canvasMultiple : 5\r\n\r\n            ,                file : ''\r\n            ,previewURL : ''\r\n        }\r\n\r\n    }\r\n\r\n    loadImage= (e) => {\r\n        // document.getElementById(\"uploadFIle\").files\r\n\r\n        // canvas 영역\r\n\t\tconst canvas = document.getElementById(\"canvas\");\r\n        let context = canvas.getContext(\"2d\");\r\n\t\tconst image = new Image(this.state.canvasHeight, this.state.canvasWidth); // Using optional size for image\r\n\t\t// image.src= document.getElementById(\"uploadFIle\").files[0].name;\r\n        // image.src= document.getElementById('uploadFIle').value.replace(/.*(\\/|\\\\)/, '');\r\n\r\n\r\n        // var file = document.getElementById(\"uploadFIle\").files[0];\r\n\r\n        e.preventDefault();\r\n        let reader = new FileReader();\r\n        let file = e.target.files[0];\r\n        reader.onloadend = () => {\r\n            this.setState({\r\n                file : file,\r\n                previewURL : reader.result\r\n              })\r\n            console.log(reader.result)\r\n\r\n        }\r\n        reader.readAsDataURL(file);\r\n\r\n\r\n\r\n        context.drawImage( image , 0, 0,this.state.canvasWidth, this.state.canvasHeight);\r\n        this.setState({context:context})\r\n    };\r\n\r\n    getLocation = (e) => {\r\n        const coorX = e.view.event.layerX\r\n        const coorY = e.view.event.layerY\r\n        const x = this.state.x\r\n        const y = this.state.y\r\n        const context = this.state.context\r\n        context.globalAlpha = 0.2;\r\n        \r\n        if (x == 0 && y == 0) {\r\n            this.setState({x:coorX, y:coorY})\r\n            context.beginPath();\r\n            context.fillStyle = 'blue';\r\n            context.arc(coorX, coorY, 5, 0, 2 * Math.PI);\r\n            context.fill();\r\n            context.closePath();\r\n        }else{\r\n            this.setState({x:0,y:0})\r\n            const text = x+\",\"+y +\" / \" +(coorX)+\",\"+(coorY)\r\n            // context.strokeRect(x,y,coorX-x,coorY-y);\r\n            context.beginPath();\r\n            context.fillStyle = 'blue';\r\n            context.arc(coorX, coorY, 5, 0, 2 * Math.PI);\r\n            context.fill();\r\n            context.fillStyle = \"red\";\r\n            context.fillRect(x,y,coorX-x,coorY-y);\r\n\r\n            context.globalAlpha = 1;\r\n            context.fillStyle = \"black\";\r\n            context.fillText(text, coorX,coorY);\r\n            context.closePath();\r\n\r\n            // DB에 넣을때는 화면과 size가 다르기때문에, 맞춰서 데이터를 준다.\r\n            console.log(x * this.state.canvasMultiple\r\n                , y * this.state.canvasMultiple\r\n                , coorX * this.state.canvasMultiple-x * this.state.canvasMultiple\r\n                , coorY * this.state.canvasMultiple-y * this.state.canvasMultiple);\r\n            // 아래부터는 DB에 데이터 전송이 필요.\r\n            // ...\r\n        }\r\n    };\r\n\r\n    render(){\r\n\r\n\r\n        return (\r\n            <div>\r\n                <h3> Coordinate </h3>\r\n                <button onClick={ () => {this.props.history.goBack()} }> back </button>\r\n                <p/>\r\n                <input type=\"file\" id=\"uploadFIle\" name=\"uploadFIle\" accept=\"image/png, image/jpeg\" onChange={this.loadImage}></input>\r\n                <p/>\r\n                <canvas id=\"canvas\" height=\"1200\" width=\"800\" onClick={this.getLocation}>This browser doesn't support canvas</canvas>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Coordinate;"]},"metadata":{},"sourceType":"module"}