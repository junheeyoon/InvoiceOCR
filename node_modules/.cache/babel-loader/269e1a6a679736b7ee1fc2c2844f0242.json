{"ast":null,"code":"var _jsxFileName = \"D:\\\\WorkSpace\\\\workspace_RPA\\\\invoice\\\\src\\\\Coordinate.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Coordinate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setC = () => {\n      const canvas = document.getElementById(\"canvas\");\n      let context = canvas.getContext(\"2d\");\n      const image = new Image(this.state.canvasHeight, this.state.canvasWidth); // Using optional size for image\n\n      image.src = this.state.imagePreviewUrl;\n      context.src = image.src;\n      context.drawImage(image, 0, 0, this.state.canvasWidth, this.state.canvasHeight);\n      this.setState({\n        context: context\n      });\n    };\n\n    this.getLocation = e => {\n      const context = this.state.context;\n      if (context == \"\") return;\n      const coorX = e.view.event.layerX;\n      const coorY = e.view.event.layerY;\n      const x = this.state.x;\n      const y = this.state.y;\n      context.globalAlpha = 0.2;\n\n      if (x == 0 && y == 0) {\n        this.setState({\n          x: coorX,\n          y: coorY\n        });\n        context.beginPath();\n        context.fillStyle = 'blue';\n        context.arc(coorX, coorY, 5, 0, 2 * Math.PI);\n        context.fill();\n        context.closePath();\n      } else {\n        this.setState({\n          x: 0,\n          y: 0\n        });\n        const text = x + \",\" + y + \" / \" + coorX + \",\" + coorY; // context.strokeRect(x,y,coorX-x,coorY-y);\n\n        context.beginPath();\n        context.fillStyle = 'blue';\n        context.arc(coorX, coorY, 5, 0, 2 * Math.PI);\n        context.fill();\n        context.fillStyle = \"red\";\n        context.fillRect(x, y, coorX - x, coorY - y);\n        context.globalAlpha = 1;\n        context.fillStyle = \"black\";\n        context.fillText(text, coorX, coorY);\n        context.closePath(); // DB에 넣을때는 화면과 size가 다르기때문에, 맞춰서 데이터를 준다.\n        // console.log(x * this.state.canvasMultiple\n        //     , y * this.state.canvasMultiple\n        //     , coorX * this.state.canvasMultiple-x * this.state.canvasMultiple\n        //     , coorY * this.state.canvasMultiple-y * this.state.canvasMultiple);\n        // 아래부터는 DB에 데이터 전송이 필요.\n\n        document.getElementById(\"txtValue\").value = text.replace(' / ', ','); // document.getElementById(\"txtValue\").value = (\n        //     eval(x * this.state.canvasMultiple)\n        //     +\",\"+ eval(y * this.state.canvasMultiple)\n        //     +\",\"+ eval(coorX * this.state.canvasMultiple-x * this.state.canvasMultiple)\n        //     +\",\"+ eval(coorY * this.state.canvasMultiple-y * this.state.canvasMultiple)\n        // );\n      }\n    };\n\n    this.insertCoordinateData = e => {\n      if (document.getElementById(\"txtLabel\").value && document.getElementById(\"txtValue\").value) {\n        const txtTable = document.getElementById(\"txtTable\").value;\n        const txtLabel = document.getElementById(\"txtLabel\").value;\n        const txtUnit = document.getElementById(\"txtUnit\").value;\n        const txtValue = document.getElementById(\"txtValue\").value;\n        let formData = new FormData();\n        formData.append('methodName', 'UpdateCoordinate');\n        formData.append('table', txtTable);\n        formData.append('label', txtLabel);\n        formData.append('unit', txtUnit);\n        formData.append('value', txtValue);\n        fetch(\"http://\" + this.state.IP + \"/RPA/Coordinate/setCoordinate\", {\n          method: 'POST',\n          body: formData\n        }).then(res => res.json()).then(alert('success')).catch(error => {\n          alert('fail');\n          console.error(error);\n        });\n      } else {\n        alert('Label & Value is a required');\n        return;\n      }\n    };\n\n    this.state = {\n      dataList: null,\n      IP: '127.0.0.1:8728',\n      tableName: '',\n      x: 0,\n      y: 0,\n      context: '',\n      canvasWidth: 800,\n      canvasHeight: 1200,\n      canvasMultiple: 1,\n      file: '',\n      imagePreviewUrl: ''\n    };\n  }\n\n  _handleImageChange(e) {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result\n      });\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  render() {\n    let {\n      imagePreviewUrl\n    } = this.state;\n    let $imagePreview = null;\n\n    if (imagePreviewUrl) {\n      $imagePreview = /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imagePreviewUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 28\n      }, this);\n    } else {\n      $imagePreview = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"previewText\",\n        children: \"Please select an Image for Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 28\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Coordinate \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.props.history.goBack();\n        },\n        children: \" back \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        border: \"1\",\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: \"2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"previewComponent\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"fileInput\",\n              type: \"file\",\n              accept: \"image/png, image/jpeg\",\n              onChange: e => this._handleImageChange(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.setC,\n              children: \"convert\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"multiples\",\n              size: \"10\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"apple\",\n                children: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"apple\",\n                children: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"apple\",\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"apple\",\n                children: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"apple\",\n                selected: true,\n                children: \"5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"apple\",\n                children: \"6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"apple\",\n                children: \"7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"banana\",\n                children: \"8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"banana\",\n                children: \"9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"banana\",\n                children: \"10\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            id: \"canvas\",\n            height: \"1200\",\n            width: \"800\",\n            onClick: this.getLocation,\n            children: \"This browser doesn't support canvas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          valign: \"top\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Data Table : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"txtTable\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"invoice_type\",\n              selected: true,\n              children: \"Invoice Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"invoice_coordinate\",\n              children: \"Invoice Coordinate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"awb_coordinate\",\n              children: \"Airwaybill Coordinate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Data Label : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"txtLabel\",\n            size: \"15\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 95\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 100\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Data Unit : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"txtUnit\",\n            size: \"15\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 93\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 98\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Data Value : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"txtValue\",\n            size: \"15\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 95\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 100\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: this.insertCoordinateData,\n            children: \"Insert Coordinate Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Coordinate;","map":{"version":3,"sources":["D:/WorkSpace/workspace_RPA/invoice/src/Coordinate.js"],"names":["React","Component","Coordinate","constructor","props","setC","canvas","document","getElementById","context","getContext","image","Image","state","canvasHeight","canvasWidth","src","imagePreviewUrl","drawImage","setState","getLocation","e","coorX","view","event","layerX","coorY","layerY","x","y","globalAlpha","beginPath","fillStyle","arc","Math","PI","fill","closePath","text","fillRect","fillText","value","replace","insertCoordinateData","txtTable","txtLabel","txtUnit","txtValue","formData","FormData","append","fetch","IP","method","body","then","res","json","alert","catch","error","console","dataList","tableName","canvasMultiple","file","_handleImageChange","preventDefault","reader","FileReader","target","files","onloadend","result","readAsDataURL","render","$imagePreview","history","goBack"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\r\n\r\nclass Coordinate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataList:null\r\n            , IP:'127.0.0.1:8728'\r\n            , tableName : ''\r\n\r\n            , x : 0\r\n            , y : 0\r\n            , context : ''\r\n\r\n            , canvasWidth : 800\r\n            , canvasHeight : 1200\r\n            , canvasMultiple : 1\r\n\r\n            , file : ''\r\n            , imagePreviewUrl : ''\r\n        }\r\n\r\n    }\r\n\r\n    _handleImageChange(e) {\r\n        e.preventDefault();\r\n\r\n        let reader = new FileReader();\r\n        let file = e.target.files[0];\r\n\r\n        reader.onloadend = () => {\r\n        this.setState({\r\n            file: file,\r\n            imagePreviewUrl: reader.result\r\n        });\r\n        }\r\n\r\n        reader.readAsDataURL(file)\r\n        \r\n        \r\n    }\r\n    setC = () =>{\r\n        const canvas = document.getElementById(\"canvas\");\r\n        let context = canvas.getContext(\"2d\");\r\n        const image = new Image(this.state.canvasHeight, this.state.canvasWidth); // Using optional size for image\r\n\r\n        image.src = this.state.imagePreviewUrl\r\n        \r\n        context.src = image.src\r\n\r\n        context.drawImage( image , 0, 0,this.state.canvasWidth, this.state.canvasHeight);\r\n        this.setState({context:context})\r\n\r\n    }\r\n\r\n    getLocation = (e) => {\r\n        const context = this.state.context\r\n        if(context == \"\") return\r\n\r\n        const coorX = e.view.event.layerX\r\n        const coorY = e.view.event.layerY\r\n        const x = this.state.x\r\n        const y = this.state.y\r\n        context.globalAlpha = 0.2;\r\n        \r\n        if (x == 0 && y == 0) {\r\n            this.setState({x:coorX, y:coorY})\r\n            context.beginPath();\r\n            context.fillStyle = 'blue';\r\n            context.arc(coorX, coorY, 5, 0, 2 * Math.PI);\r\n            context.fill();\r\n            context.closePath();\r\n        }else{\r\n            this.setState({x:0,y:0})\r\n            const text = x+\",\"+y +\" / \" +(coorX)+\",\"+(coorY)\r\n            // context.strokeRect(x,y,coorX-x,coorY-y);\r\n            context.beginPath();\r\n            context.fillStyle = 'blue';\r\n            context.arc(coorX, coorY, 5, 0, 2 * Math.PI);\r\n            context.fill();\r\n            context.fillStyle = \"red\";\r\n            context.fillRect(x,y,coorX-x,coorY-y);\r\n\r\n            context.globalAlpha = 1;\r\n            context.fillStyle = \"black\";\r\n            context.fillText(text, coorX,coorY);\r\n            context.closePath();\r\n\r\n            // DB에 넣을때는 화면과 size가 다르기때문에, 맞춰서 데이터를 준다.\r\n            // console.log(x * this.state.canvasMultiple\r\n            //     , y * this.state.canvasMultiple\r\n            //     , coorX * this.state.canvasMultiple-x * this.state.canvasMultiple\r\n            //     , coorY * this.state.canvasMultiple-y * this.state.canvasMultiple);\r\n            // 아래부터는 DB에 데이터 전송이 필요.\r\n            document.getElementById(\"txtValue\").value = text.replace(' / ',',');\r\n            // document.getElementById(\"txtValue\").value = (\r\n            //     eval(x * this.state.canvasMultiple)\r\n            //     +\",\"+ eval(y * this.state.canvasMultiple)\r\n            //     +\",\"+ eval(coorX * this.state.canvasMultiple-x * this.state.canvasMultiple)\r\n            //     +\",\"+ eval(coorY * this.state.canvasMultiple-y * this.state.canvasMultiple)\r\n            // );\r\n        }\r\n    };\r\n    insertCoordinateData = (e) => {\r\n        if (document.getElementById(\"txtLabel\").value && document.getElementById(\"txtValue\").value ) {\r\n            const txtTable = document.getElementById(\"txtTable\").value\r\n            const txtLabel = document.getElementById(\"txtLabel\").value\r\n            const txtUnit = document.getElementById(\"txtUnit\").value\r\n            const txtValue = document.getElementById(\"txtValue\").value\r\n\r\n            let formData = new FormData();\r\n            formData.append('methodName', 'UpdateCoordinate');\r\n            formData.append('table', txtTable);\r\n            formData.append('label', txtLabel);\r\n            formData.append('unit', txtUnit);\r\n            formData.append('value', txtValue);\r\n    \r\n            fetch(\"http://\"+this.state.IP+\"/RPA/Coordinate/setCoordinate\", {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n            .then(res => res.json())\r\n            .then(\r\n                alert('success')\r\n            )\r\n            .catch((error) => {\r\n                alert('fail')\r\n                console.error(error);\r\n            });\r\n\r\n        }else{\r\n            alert('Label & Value is a required');return;\r\n        }\r\n        \r\n\r\n    }\r\n    render(){\r\n\r\n        let {imagePreviewUrl} = this.state;\r\n        let $imagePreview = null;\r\n        if (imagePreviewUrl) {\r\n          $imagePreview = (<img src={imagePreviewUrl} />);\r\n        } else {\r\n          $imagePreview = (<div className=\"previewText\">Please select an Image for Preview</div>);\r\n        }\r\n        return (\r\n            <div>\r\n                <h3> Coordinate </h3>\r\n                <button onClick={ () => {this.props.history.goBack()} }> back </button>\r\n                <p/>\r\n                \r\n                \r\n                <tr border=\"1\">\r\n                    <td colSpan=\"2\">\r\n                    <div className=\"previewComponent\">\r\n                        {/* <form onSubmit={(e)=>this._handleSubmit(e)}> */}\r\n                        <input className=\"fileInput\" \r\n                            type=\"file\" \r\n                            accept=\"image/png, image/jpeg\"\r\n                            onChange={(e)=>this._handleImageChange(e)} />\r\n                        {/* <button className=\"submitButton\" \r\n                            type=\"submit\" \r\n                            onClick={(e)=>this._handleSubmit(e)}>Upload Image</button> */}\r\n                        {/* </form> */}\r\n                        {/* <div className=\"imgPreview\">\r\n                            {$imagePreview}\r\n                        </div> */}\r\n\r\n                        <button onClick={this.setC}>convert</button>\r\n                        <select name='multiples' size='10'>\r\n                            <option value='apple'>1</option>\r\n                            <option value='apple'>2</option>\r\n                            <option value='apple'>3</option>\r\n                            <option value='apple'>4</option>\r\n                            <option value='apple' selected>5</option>\r\n                            <option value='apple'>6</option>\r\n                            <option value='apple'>7</option>\r\n                            <option value='banana'>8</option>\r\n                            <option value='banana'>9</option>\r\n                            <option value='banana'>10</option>\r\n                        </select>\r\n                    </div>\r\n                    <p/>\r\n                    </td>\r\n                </tr> \r\n                <tr>\r\n                    <td>\r\n                    <p/>\r\n                    <canvas id=\"canvas\" height=\"1200\" width=\"800\" onClick={this.getLocation}>This browser doesn't support canvas</canvas>\r\n                    </td>\r\n\r\n                    <td valign=\"top\" > \r\n                    <label >Data Table : </label>\r\n                    {/* <input type='text' id='txtTable' value ='awb_coordinate' size='20' disabled/><br/><br/> */}\r\n                    <select id='txtTable' >\r\n                        <option value=\"invoice_type\" selected>Invoice Type</option>\r\n                        <option value=\"invoice_coordinate\">Invoice Coordinate</option>\r\n                        <option value=\"awb_coordinate\">Airwaybill Coordinate</option>\r\n                    </select><br/><br/> \r\n                    <label >Data Label : </label><input type='text' id='txtLabel' size='15' /><br/><br/>\r\n                    <label >Data Unit : </label><input type='text' id='txtUnit' size='15' /><br/><br/>\r\n                    <label >Data Value : </label><input type='text' id='txtValue' size='15' /><br/><br/>\r\n                    <button type='button' onClick={this.insertCoordinateData}>Insert Coordinate Data</button>\r\n                    </td>\r\n                </tr>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Coordinate;"]},"metadata":{},"sourceType":"module"}