{"ast":null,"code":"var _jsxFileName = \"D:\\\\WorkSpace\\\\workspace_RPA\\\\invoice\\\\src\\\\Coordinate.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Coordinate = ({\n  history\n}) => {\n  getLocation = e => {\n    const coorX = e.view.event.layerX;\n    const coorY = e.view.event.layerY;\n    const x = this.state.x;\n    const y = this.state.y;\n    const context = this.state.context;\n    context.globalAlpha = 0.2;\n\n    if (x == 0 && y == 0) {\n      this.setState({\n        x: coorX,\n        y: coorY\n      });\n      context.beginPath();\n      context.fillStyle = 'blue';\n      context.arc(coorX, coorY, 5, 0, 2 * Math.PI);\n      context.fill();\n      context.closePath();\n    } else {\n      this.setState({\n        x: 0,\n        y: 0\n      });\n      const text = x + \",\" + y + \" / \" + coorX + \",\" + coorY; // context.strokeRect(x,y,coorX-x,coorY-y);\n\n      context.beginPath();\n      context.fillStyle = 'blue';\n      context.arc(coorX, coorY, 5, 0, 2 * Math.PI);\n      context.fill();\n      context.fillStyle = \"red\";\n      context.fillRect(x, y, coorX - x, coorY - y);\n      context.globalAlpha = 1;\n      context.fillStyle = \"black\";\n      context.fillText(text, coorX, coorY);\n      context.closePath(); // DB에 넣을때는 화면과 size가 다르기때문에, 맞춰서 데이터를 준다.\n\n      console.log(x * this.state.canvasMultiple, y * this.state.canvasMultiple, coorX * this.state.canvasMultiple - x * this.state.canvasMultiple, coorY * this.state.canvasMultiple - y * this.state.canvasMultiple); // 아래부터는 DB에 데이터 전송이 필요.\n      // ...\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" Coordinate \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        history.goBack();\n      },\n      children: \" back \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"canvas\",\n      height: \"1200\",\n      width: \"800\",\n      onClick: this.getLocation,\n      children: \"This browser doesn't support canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Coordinate;\nexport default Coordinate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Coordinate\");","map":{"version":3,"sources":["D:/WorkSpace/workspace_RPA/invoice/src/Coordinate.js"],"names":["React","Coordinate","history","getLocation","e","coorX","view","event","layerX","coorY","layerY","x","state","y","context","globalAlpha","setState","beginPath","fillStyle","arc","Math","PI","fill","closePath","text","fillRect","fillText","console","log","canvasMultiple","goBack"],"mappings":"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","sourcesContent":["import React from 'react';\r\nconst Coordinate = ( {history} ) => {\r\n    getLocation = (e) => {\r\n\t\tconst coorX = e.view.event.layerX\r\n\t\tconst coorY = e.view.event.layerY\r\n        const x = this.state.x\r\n        const y = this.state.y\r\n        const context = this.state.context\r\n        context.globalAlpha = 0.2;\r\n        \r\n\t\tif (x == 0 && y == 0) {\r\n\t\t\tthis.setState({x:coorX, y:coorY})\r\n            context.beginPath();\r\n            context.fillStyle = 'blue';\r\n            context.arc(coorX, coorY, 5, 0, 2 * Math.PI);\r\n            context.fill();\r\n            context.closePath();\r\n        }else{\r\n            this.setState({x:0,y:0})\r\n            const text = x+\",\"+y +\" / \" +(coorX)+\",\"+(coorY)\r\n            // context.strokeRect(x,y,coorX-x,coorY-y);\r\n            context.beginPath();\r\n            context.fillStyle = 'blue';\r\n            context.arc(coorX, coorY, 5, 0, 2 * Math.PI);\r\n            context.fill();\r\n            context.fillStyle = \"red\";\r\n            context.fillRect(x,y,coorX-x,coorY-y);\r\n\r\n            context.globalAlpha = 1;\r\n            context.fillStyle = \"black\";\r\n            context.fillText(text, coorX,coorY);\r\n            context.closePath();\r\n\r\n            // DB에 넣을때는 화면과 size가 다르기때문에, 맞춰서 데이터를 준다.\r\n            console.log(x * this.state.canvasMultiple\r\n                , y * this.state.canvasMultiple\r\n                , coorX * this.state.canvasMultiple-x * this.state.canvasMultiple\r\n                , coorY * this.state.canvasMultiple-y * this.state.canvasMultiple);\r\n            // 아래부터는 DB에 데이터 전송이 필요.\r\n            // ...\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <h3> Coordinate </h3>\r\n            <button onClick={ () => {history.goBack()} }> back </button>\r\n            <p/>\r\n            <canvas id=\"canvas\" height=\"1200\" width=\"800\" onClick={this.getLocation}>This browser doesn't support canvas</canvas>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Coordinate;"]},"metadata":{},"sourceType":"module"}